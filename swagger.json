swagger: "2.0"
info:
  description: "Nodejs API for accessing the mySQL DB jh"
  version: "1.0.0"
  title: "JH MySQL"
  contact:
    email: "jh.stores1@gmail.com"
host: "openhabianpi:4000"
basePath: "/api"
tags:
- name: "gehalt"
  description: "Everything around the table Gehalt"
schemes:
- "http"
paths:
  /gehalt:
    post:
      tags:
      - "gehalt"
      summary: "Add a new Gehalt entry to the table"
      description: "This adds one new row (month) to the table Gehalt"
      operationId: "addGehalt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Gehalt-Object to be inserted in the table"
        required: true
        schema:
          $ref: "#/definitions/Gehalt"
      responses:
        201:
          description: "Successful inserted the new entry"
        500:
          description: "Body wrong or MySQL is not ready"
    get:
      tags:
      - "gehalt"
      summary: "Get Gehalt entry"
      description: "Gets one or more rows from Gehalt table"
      operationId: "findGehalt"
      produces:
      - "application/json"
      parameters:
      - name: "jahr"
        in: "query"
        description: "Year to query from (optional - eigther jahr or monat must be set)"
        required: false
        type: "integer"
      - name: "monat"
        in: "query"
        description: "Month to query from (optional - eigther jahr or monat must be set)"
        required: false
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Gehalt"
        500:
          description: "Server error"
  /gehalt/{Data}:
    get:
      tags:
      - "gehalt"
      summary: "Get Gehalt entry for specific data"
      description: "Gets aggregated values from Gehalt table for specific data type (valid: APK, Kantine, Netto, Brutto) for all years"
      operationId: "findGehaltByData"
      produces:
      - "application/json"
      parameters:
      - name: "Data"
        in: "path"
        description: "Data to be queried (valid: APK, Kantine, Netto, Brutto)"
        required: true
        type: "string"
      - name: "jahr"
        in: "query"
        description: "Year to query from (optional - if set all months from this year will be queried)"
        required: false
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Gehalt_aggregated_result"
        500:
          description: "Server error"
  /gehalt/list:
    post:
      tags:
      - "gehalt"
      summary: "Get Gehalt list entry for specific data"
      description: "Gets list of values from Gehalt table for specific data type (valid: APK, Kantine, Netto, Brutto) for specified year"
      operationId: "findGehaltListByData"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Jahr and Data to list from MySQL"
        required: true
        schema:
          $ref: "#/definitions/Gehalt_List_By_Data"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gehalt_Get_List_By_Data"
        500:
          description: "Server error"   
    delete:
      tags:
      - "gehalt"
      summary: "Deletes a row in Gehalt table"
      description: ""
      operationId: "deleteGehalt"
      produces:
      - "application/json"
      parameters:
      - name: "entry"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/Gehalt_Deletion"
      responses:
        202:
          description: "Deletion done"
        404:
          description: "Pet not found"
definitions:
  Gehalt:
    type: "object"
    properties:
      Jahr:
        type: "integer"
        format: "int64"
      Monat:
        type: "integer"
        format: "int64"
      Netto:
        type: "number"
        format: "float"
      Brutto:
        type: "number"
        format: "float"
      Kantine:
        type: "number"
        format: "float"
      AKP:
        type: "number"
        format: "float"
    xml:
      name: "Gehalt"
  Gehalt_aggregated_result:
    type: "object"
    properties:
      Jahr:
        type: "integer"
        format: "int64"
      Summe:
        type: "integer"
        format: "int64"
    xml:
      name: "GehaltData"
  Gehalt_List_By_Data:
    type: "object"
    properties:
      Jahr:
        type: "integer"
        format: "int64"
      Data:
        type: "string"
    xml:
      name: "GehaltListByData"
  Gehalt_Get_List_By_Data:
    type: "object"
    properties:
      Monat:
        type: "integer"
        format: "int64"
      Data:
        type: "string"
      Value:
        type: "number"
        format: "float"
    xml:
      name: "GetGehaltListByData"      
  Gehalt_Deletion:
    type: "object"
    properties:
      Monat:
        type: "integer"
        format: "int64"
      Jahr:
        type: "integer"
        format: "int64"
    xml:
      name: "GehaltDeletion"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"